<?php

function pippin_stripe_process_payment() {
	if(isset($_POST['action']) && $_POST['action'] == 'stripe' && wp_verify_nonce($_POST['stripe_nonce'], 'stripe-nonce')) {
		
		global $stripe_options;
		
		// load the stripe libraries
		require_once(STRIPE_BASE_DIR . '/lib/Stripe.php');
		
		$amount = base64_decode($_POST['amount']) * 100;
		
		// retrieve the token generated by stripe.js
		$token = $_POST['stripeToken'];

		// check if we are using test mode
		if(isset($stripe_options['test_mode']) && $stripe_options['test_mode']) {
			$secret_key = $stripe_options['test_secret_key'];
		} else {
			$secret_key = $stripe_options['live_secret_key'];
		}
		
		Stripe::setApiKey($secret_key);		
		
		// check for a discount code and make sure it is valid if present
		if(isset($_POST['discount']) && strlen(trim($_POST['discount'])) > 0) {
			
			$using_discount = true;
			
			// we have a discount code, now check that it is valid			
			
			try {
				
				$coupon = Stripe_Coupon::retrieve( trim( $_POST['discount'] ) );
				// if we got here, the coupon is valid
			
			} catch (Exception $e) {
				
				// an exception was caught, so the code is invalid
				wp_die(__('The coupon code you entered is invalid. Please click back and enter a valid code, or leave it blank for no discount.', 'pippin'), 'Error');
			
			}
			
		}
		
		if(isset($_POST['recurring']) && $_POST['recurring'] == 'yes') { // process a recurring payment
		
			$plan_id = strip_tags(trim($_POST['plan_id']));		
		
			try {		
				
				if($using_discount !== false) {
					
					$customer = Stripe_Customer::create(array(
							'card' => $token,
							'plan' => $plan_id,
							'email' => strip_tags(trim($_POST['email'])),
							'coupon' => trim($_POST['discount'])
						)
					);
					
				} else {
					
					$customer = Stripe_Customer::create(array(
							'card' => $token,
							'plan' => $plan_id,
							'email' => strip_tags(trim($_POST['email']))
						)
					);
					
				}
		
				// redirect on successful recurring payment setup
				$redirect = add_query_arg('payment', 'paid', $_POST['redirect']);
				
			} catch (Exception $e) {
				// redirect on failure
				$redirect = add_query_arg('payment', 'failed', $_POST['redirect']);
			}
		
		} else { // process a one-tiome payment
		
			// attempt to charge the customer's card
			try {
				
				if($using_discount !== false) {				
					// calculate the discounted price
					$amount = $amount - ( $amount * ( $coupon->percent_off / 100 ) );
				}	
				
				$charge = Stripe_Charge::create(array(
						'amount' => $amount, // amount in cents
						'currency' => 'usd',
						'card' => $token
					)
				);
					
				// redirect on successful payment
				$redirect = add_query_arg('payment', 'paid', $_POST['redirect']);
				
			} catch (Exception $e) {
				wp_die($e);
				// redirect on failed payment
				$redirect = add_query_arg('payment', 'failed', $_POST['redirect']);
			}
		}
		
		// redirect back to our previous page with the added query variable
		wp_redirect($redirect); exit;
	}
}
add_action('init', 'pippin_stripe_process_payment');